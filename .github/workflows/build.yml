# Copyright (c) 2025 honeok <i@honeok.com>
# SPDX-License-Identifier: Apache-2.0

---
name: 'Build nezha-dashboard'

on:
  push:
    tags:
      - 'v*'
  schedule:
    - cron: '0 16 1 * *'
  workflow_dispatch:

permissions:
  actions: write
  contents: write

defaults:
  run:
    shell: bash

env:
  IPINFO_TOKEN: ${{ secrets.IPINFO_TOKEN }}
  DOCKER_USERNAME: ${{ GITHUB.REPOSITORY_OWNER }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

jobs:
  release_v0:
    name: 'Release ${{ matrix.NEZHA_VERSION }} Binary'
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        NEZHA_VERSION:
          - 'v0.18.6'
          - 'v0.20.13'

    steps:
      - name: 'checkout repository'
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: 'Check and remove existing tag'
        run: |
          if git tag --list | grep -q "^${{ matrix.NEZHA_VERSION }}$"; then
            git push origin --delete ${{ matrix.NEZHA_VERSION }}
          fi

      - name: 'Clone source code for ${{ matrix.NEZHA_VERSION }}'
        run: |
          mkdir -p ${{ GITHUB.WORKSPACE }}/v0/source
          cd ${{ GITHUB.WORKSPACE }}/v0/source
          git clone --depth=1 --branch ${{ matrix.NEZHA_VERSION }} https://github.com/nezhahq/nezha.git .

      - name: 'Fetch ipinfo geoip database'
        working-directory: ${{ GITHUB.WORKSPACE }}/v0/source
        run: |
          rm -f pkg/geoip/geoip.db
          wget --tries=50 -qO pkg/geoip/geoip.db "https://ipinfo.io/data/free/country.mmdb?token=${IPINFO_TOKEN}"

      - name: 'Extract version number'
        id: bump_version
        run: echo "version=$(sed 's/^v//' <<< ${{ matrix.NEZHA_VERSION }})" >> "$GITHUB_OUTPUT"

      # https://github.com/crazy-max/ghaction-xgo?tab=readme-ov-file#usage
      - name: 'Build release binaries'
        uses: crazy-max/ghaction-xgo@v3
        with:
          xgo_version: latest
          go_version: 1.21
          dest: build
          pkg: cmd/dashboard
          prefix: dashboard
          targets: linux/amd64,linux/arm64,linux/s390x
          v: true
          x: false
          race: false
          tags: timetzdata
          ldflags: -s -w --extldflags '-static -fpic' -X github.com/naiba/nezha/service/singleton.Version=${{ steps.bump_version.outputs.version }}
          buildmode: default
          trimpath: true
          working_dir: ${{ GITHUB.WORKSPACE }}/v0/source

      - name: 'Package release assets'
        working-directory: ${{ GITHUB.WORKSPACE }}/v0/source
        run: |
          cd build
          for FILE in *; do
            if [ -f "$FILE" ]; then
              PLATFORM=${FILE#dashboard-}
              PACKAGE_NAME="dashboard-${{ steps.bump_version.outputs.version }}-${PLATFORM}"
              mkdir "$PACKAGE_NAME"
              cp "$FILE" "${PACKAGE_NAME}/dashboard"
              sha256sum "${PACKAGE_NAME}/dashboard" | sed 's| .*| dashboard|' > "${PACKAGE_NAME}/checksum.txt"
              wget -qO "${PACKAGE_NAME}/LICENSE" https://www.apache.org/licenses/LICENSE-2.0.txt
              tar cfz "${PACKAGE_NAME}.tar.gz" "$PACKAGE_NAME"
              rm -rf "$PACKAGE_NAME"
            fi
          done
          cd ..

      - name: 'Fetch build time'
        id: build_time
        run:  echo "time=$(date -u +'%Y-%m-%d %H:%M:%S UTC')" >> "$GITHUB_OUTPUT"

      # https://github.com/ncipollo/release-action/blob/main/README.zh-Hans.md
      - name: 'Create release and upload release'
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: ${{ GITHUB.WORKSPACE }}/v0/source/build/*.tar.gz
          body: |
            Automated release of nezha-dashboard version ${{ matrix.NEZHA_VERSION }}.
            Binaries are built from official repositories.
            Release time: ${{ steps.build_time.outputs.time }}
          generateReleaseNotes: false
          name: ${{ matrix.NEZHA_VERSION }}
          tag: ${{ matrix.NEZHA_VERSION }}

  build_v0:
    name: 'Build ${{ matrix.NEZHA_VERSION }} Image'
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        NEZHA_VERSION:
          - 'v0.18.6'
          - 'v0.20.13'

    steps:
      - name: 'Check out repository'
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: 'Fetch ipinfo geoip database'
        working-directory: ${{ GITHUB.WORKSPACE }}/v0
        run: |
          rm -f pkg/geoip/geoip.db
          wget --tries=50 -qO geoip.db https://ipinfo.io/data/free/country.mmdb?token=${IPINFO_TOKEN}

      - name: 'Set up Docker QEMU'
        uses: docker/setup-qemu-action@v3

      - name: 'Set up Docker Buildx'
        uses: docker/setup-buildx-action@v3

      - name: 'Login to DockerHub'
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: 'Extract Docker metadata'
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_USERNAME }}/nezha-dashboard
          tags: type=raw,value=${{ matrix.NEZHA_VERSION }}

      - name: 'Build and Push nezha-dashboard image'
        uses: docker/build-push-action@v6
        with:
          context: ${{ GITHUB.WORKSPACE }}/v0
          file: ${{ GITHUB.WORKSPACE }}/v0/Dockerfile
          platforms: linux/amd64, linux/arm64/v8
          build-args: NEZHA_VERSION=${{ matrix.NEZHA_VERSION }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true

  build_v1:
    name: 'Build v1 Image'
    runs-on: ubuntu-latest

    steps:
      - name: 'Check out repository'
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: 'Fetch Versions and Determine Build'
        id: bump_version
        run: |
          NEZHA_VERSION="$(wget -qO- --tries=50 --header="Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/nezhahq/nezha/releases/latest | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')"
          echo "version=${NEZHA_VERSION}" >> "$GITHUB_OUTPUT"

      - name: 'Fetch ipinfo geoip database'
        working-directory: ${{ GITHUB.WORKSPACE }}/v1
        run: |
          rm -f pkg/geoip/geoip.db
          wget --tries=50 -qO geoip.db https://ipinfo.io/data/free/country.mmdb?token=${IPINFO_TOKEN}

      - name: 'Set up Docker QEMU'
        uses: docker/setup-qemu-action@v3

      - name: 'Set up Docker Buildx'
        uses: docker/setup-buildx-action@v3

      - name: 'Login to DockerHub'
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: 'Extract Docker metadata'
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_USERNAME }}/nezha-dashboard
          tags: type=raw,value=${{ steps.bump_version.outputs.version }}

      - name: 'Build and Push nezha-dashboard image'
        uses: docker/build-push-action@v6
        with:
          context: ${{ GITHUB.WORKSPACE }}/v1
          file: ${{ GITHUB.WORKSPACE }}/v1/Dockerfile
          platforms: linux/amd64, linux/arm64/v8
          build-args: NEZHA_VERSION=${{ steps.bump_version.outputs.version }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true

  cleaning_workflow:
    name: 'Cleaning up old workflows'
    needs:
      - release_v0
      - build_v0
      - build_v1
    runs-on: ubuntu-latest

    steps:
      - name: 'Cleaning up old workflows'
        uses: Mattraks/delete-workflow-runs@v2
        with:
          token: ${{ GITHUB.TOKEN }}
          repository: ${{ GITHUB.REPOSITORY }}
          retain_days: 0
          keep_minimum_runs: 0
          delete_run_by_conclusion_pattern: "cancelled, skipped, success"